name: Choco

on:
  push:
    branches-ignore:
    - "ga-ignore-*"
  pull_request:
    branches-ignore:
    - "ga-ignore-*"

env:
  SOURCE: Hanra-s-work/improved-bassoon-chocolatine
  MIRROR: "EpitechPromo2027/B-DOP-200-PAR-2-1-chocolatine-henry.letellier"
  EXECUTABLE: "hello_world"
  GITHUB_SSH_KEY: ${{ secrets.MY_CHOCO_PRIVATE_SSH_KEY }}
  BASH_CHECKER: scripts/check_results_v3.sh
  RUN_IN_EPITEST: scripts/run_in_epitest.sh
  CHECK_IF_PRESENT: scripts/check_if_present_v2.sh
  CHECK_IF_EXECUTABLE: scripts/check_if_executable_v1.sh
  CODING_STYLE_CHECKER: scripts/check.sh

jobs:

  check_coding_style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: assign execution rights to check.sh
      run: chmod +x ./check.sh
    - name: run check.sh
      run: ./check.sh $(pwd) $(pwd)
    - name: checking the results
      run: chmod +x ./$BASH_CHECKER && ./$BASH_CHECKER

  check_program_compilation:
    runs-on: ubuntu-latest
    needs: check_coding_style
    if: success()
    timeout-minutes: 2
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Pull Docker image
      run: sudo docker pull epitechcontent/epitest-docker
    - name: compile code
      run: |
        chmod +x ./$RUN_IN_EPITEST
        ./$RUN_IN_EPITEST "make; exit $?"
    - name: clean code
      run: |
        chmod +x ./$RUN_IN_EPITEST
        ./$RUN_IN_EPITEST "make clean; exit $?"
    - name: check if present
      run: |
        IFS=',' read -ra VARS <<< "${EXECUTABLE}"
        chmod +x ./$RUN_IN_EPITEST
        ./$RUN_IN_EPITEST "chmod +x ./${CHECK_IF_PRESENT} && ./${CHECK_IF_PRESENT} ${VARS[@]}; exit $?"
    - name: check if executable
      run: |
        IFS=',' read -ra VARS <<< "${EXECUTABLE}"
        chmod +x ./$RUN_IN_EPITEST
        ./$RUN_IN_EPITEST "chmod +x ./${CHECK_IF_EXECUTABLE} && ./${CHECK_IF_EXECUTABLE} ${VARS[@]}; exit $?"

  run_tests:
    runs-on: ubuntu-latest
    needs: check_program_compilation
    if: success()
    timeout-minutes: 2
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: run_tests
      run: |
        chmod +x ./$RUN_IN_EPITEST
        ./$RUN_IN_EPITEST "make tests_run; exit $?"

  repository_mirroring:
    runs-on: ubuntu-latest
    needs: run_tests
    if: success()
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Push the content to the mirror repository
      uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url: git@github.com:${{ env.MIRROR }}.git
        ssh_private_key: ${{ env.GITHUB_SSH_KEY }}
